apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/{{{ .ReleaseBuildConfiguration.Metadata.Org }}}/{{{ .ReleaseBuildConfiguration.Metadata.Repo }}}?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    {{{- if eq .Event "pull_request" }}}
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    {{{- end }}}
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "{{{ .Event }}}" && target_branch
      == "{{{ .ReleaseBuildConfiguration.Metadata.Branch }}}" {{{ .AdditionalTektonCELExpression }}}
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: {{{ truncate ( sanitize .ApplicationName ) }}}
    appstudio.openshift.io/component: {{{ truncate ( sanitize ( print .ProjectDirectoryImageBuildStepConfiguration.To "-" .ReleaseBuildConfiguration.Metadata.Branch ) ) }}}
    pipelines.appstudio.openshift.io/type: build
  name: {{{ truncate ( sanitize ( print .ProjectDirectoryImageBuildStepConfiguration.To "-" .ReleaseBuildConfiguration.Metadata.Branch ) ) }}}-on-{{{ replace .Event "_" "-" }}}
  namespace: ocp-serverless-tenant
spec:
  params:
    - name: dockerfile
      value: {{{ .ProjectDirectoryImageBuildStepConfiguration.ProjectDirectoryImageBuildInputs.DockerfilePath }}}
    - name: build-args
      value: [{{{ range $arg := .BuildArgs }}} {{{ $arg }}}, {{{ end }}}]
    - name: git-url
      value: '{{source_url}}'
    {{{- if eq .Event "pull_request" }}}
    - name: image-expires-after
      value: 5d
    - name: output-image
      value: quay.io/redhat-user-workloads/ocp-serverless-tenant/{{{ truncate ( sanitize .ApplicationName ) }}}/{{{ truncate ( sanitize .ProjectDirectoryImageBuildStepConfiguration.To ) }}}:on-pr-{{revision}}
    {{{- else }}}
    - name: output-image
      value: quay.io/redhat-user-workloads/ocp-serverless-tenant/{{{ truncate ( sanitize .ApplicationName ) }}}/{{{ truncate ( sanitize .ProjectDirectoryImageBuildStepConfiguration.To ) }}}:{{revision}}
    {{{- end }}}
    - name: revision
      value: '{{revision}}'
    {{{- if eq .Event "push" }}}
    - name: additional-tags
      value: [{{{ range $tag := .Tags }}} {{{ $tag }}}, {{{ end }}}]
    {{{- end }}}
  pipelineRef:
    name: {{{ .Pipeline }}}
  taskRunTemplate: {}
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        status: {}
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
