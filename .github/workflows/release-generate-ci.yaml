name: Generate CI config
on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - 'main'
  schedule:
    - cron: "0 6 * * 1" # Runs every Monday at 6:00 AM UTC
  workflow_dispatch: # Manual workflow trigger
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash
jobs:
  generate-ci:
    name: generate-ci
    runs-on: ubuntu-latest
    steps:
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
          ref: main
          repository: openshift-knative/backstage-plugins
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/client
          ref: main
          repository: openshift-knative/client
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-hyperfoil-benchmark] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-hyperfoil-benchmark
          ref: main
          repository: openshift-knative/eventing-hyperfoil-benchmark
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
          ref: main
          repository: openshift-knative/eventing-integrations
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
          ref: main
          repository: openshift-knative/eventing-istio
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
          ref: main
          repository: openshift-knative/eventing-kafka-broker
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
          ref: main
          repository: openshift-knative/eventing
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
          ref: main
          repository: openshift-knative/kn-plugin-event
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
          ref: main
          repository: openshift-knative/kn-plugin-func
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
          ref: main
          repository: openshift-knative/serverless-operator
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
          ref: main
          repository: openshift-knative/net-istio
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
          ref: main
          repository: openshift-knative/net-kourier
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving] Clone repository'
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack/openshift-knative/serving
          ref: main
          repository: openshift-knative/serving
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - name: Freeup disk space
        run: |
          sudo rm -rf "/usr/local/share/boost" || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
      - name: Checkout openshift-knative/hack
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/openshift-knative/hack
      - name: Setup Golang
        uses: ./src/github.com/openshift-knative/hack/actions/setup-go
      - name: Install yq
        run: go install github.com/mikefarah/yq/v3@latest
      - name: Install skopeo
        run: go install -tags="exclude_graphdriver_btrfs containers_image_openpgp" github.com/containers/skopeo/cmd/skopeo@v1.16.1
      - name: Install YAML2JSON
        run: go install github.com/bronze1man/yaml2json@latest
      - name: Convert configurations to JSON
        working-directory: ./src/github.com/openshift-knative/hack
        run: find config/*.yaml | xargs -I{} sh -c "yaml2json < {} > {}.json"
      - name: Checkout openshift/release
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          ref: 'master'
          repository: 'openshift/release'
          path: ./src/github.com/openshift-knative/hack/openshift/release
      - name: Checkout openshift/release
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        uses: actions/checkout@v4
        with:
          ref: 'master'
          repository: 'openshift/release'
          path: ./src/github.com/openshift-knative/hack/openshift/release
          token: ${{ secrets.SERVERLESS_QE_ROBOT }}
      - name: Configure Git user
        run: |
          git config --global user.email "serverless-support@redhat.com"
          git config --global user.name "serverless-qe"
      - name: Generate CI
        working-directory: ./src/github.com/openshift-knative/hack
        run: make generate-ci-no-clean ARGS=--branch=master
      - name: Create Pull Request - openshift/release
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        run: |
          set -x
          git remote add fork "https://github.com/serverless-qe/release.git"
          branch="sync-serverless-ci"
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/release.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/release.git" "$branch:$branch" -f
          fi
          gh pr create --base master --head "serverless-qe:$branch" --fill-verbose || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift/release
      - name: Create Pull Request - openshift-knative/hack
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        run: |
          set -x
          git remote add fork "https://github.com/serverless-qe/hack.git"
          branch="sync-konflux-main"
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/hack.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/hack.git" "$branch:$branch" -f
          fi
          gh pr create --base main --head "serverless-qe:$branch" --title "[main] Add Konflux configurations" --body "Add Konflux components and pipelines" || true
        # Use the repository cloned by the prowgen tool
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/hack
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - main] Update dependabot configurations'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[backstage-plugins - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="backstage-plugins"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/backstage-plugins
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - main] Update dependabot configurations'
        run: |
          set -x
          repo="client"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="client"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="client"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="client"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="client"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="client"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="client"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="client"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="client"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="client"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="client"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[client - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="client"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/client
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-hyperfoil-benchmark - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-hyperfoil-benchmark"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-hyperfoil-benchmark
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - main] Update dependabot configurations'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-integrations - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-integrations"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-integrations
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - main] Update dependabot configurations'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-istio - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-istio"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - main] Update dependabot configurations'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing-kafka-broker - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing-kafka-broker"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing-kafka-broker
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - main] Update dependabot configurations'
        run: |
          set -x
          repo="eventing"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[eventing - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="eventing"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/eventing
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - main] Update dependabot configurations'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.15] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-konflux-release-1.15"
          target_branch="release-1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-owners-release-1.15"
          target_branch="release-1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.16] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-konflux-release-1.16"
          target_branch="release-1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-owners-release-1.16"
          target_branch="release-1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.17] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-konflux-release-1.17"
          target_branch="release-1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-owners-release-1.17"
          target_branch="release-1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.18] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-konflux-release-1.18"
          target_branch="release-1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-owners-release-1.18"
          target_branch="release-1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.19] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-konflux-release-1.19"
          target_branch="release-1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - release-1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-owners-release-1.19"
          target_branch="release-1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-event - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-event"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-event
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - main] Update dependabot configurations'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.19] Create Konflux PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-konflux-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - release-v1.19] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-owners-release-v1.19"
          target_branch="release-v1.19"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[kn-plugin-func - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="kn-plugin-func"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/kn-plugin-func
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - main] Update dependabot configurations'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - main] Create Konflux PR'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-konflux-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - release-1.35] Create Konflux PR'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-konflux-release-1.35"
          target_branch="release-1.35"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - release-1.35] Create OWNERS file update PR'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-owners-release-1.35"
          target_branch="release-1.35"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - release-1.36] Create Konflux PR'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-konflux-release-1.36"
          target_branch="release-1.36"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serverless-operator - release-1.36] Create OWNERS file update PR'
        run: |
          set -x
          repo="serverless-operator"
          branch="sync-owners-release-1.36"
          target_branch="release-1.36"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serverless-operator
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - main] Update dependabot configurations'
        run: |
          set -x
          repo="net-istio"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-istio - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-istio"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-istio
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - main] Update dependabot configurations'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[net-kourier - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="net-kourier"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/net-kourier
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - main] Update dependabot configurations'
        run: |
          set -x
          repo="serving"
          branch="sync-dependabot-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update dependabot configurations" --body "Update dependabot configurations" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.15] Create Konflux PR'
        run: |
          set -x
          repo="serving"
          branch="sync-konflux-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.15] Create OWNERS file update PR'
        run: |
          set -x
          repo="serving"
          branch="sync-owners-release-v1.15"
          target_branch="release-v1.15"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.16] Create Konflux PR'
        run: |
          set -x
          repo="serving"
          branch="sync-konflux-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.16] Create OWNERS file update PR'
        run: |
          set -x
          repo="serving"
          branch="sync-owners-release-v1.16"
          target_branch="release-v1.16"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.17] Create Konflux PR'
        run: |
          set -x
          repo="serving"
          branch="sync-konflux-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.17] Create OWNERS file update PR'
        run: |
          set -x
          repo="serving"
          branch="sync-owners-release-v1.17"
          target_branch="release-v1.17"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.18] Create Konflux PR'
        run: |
          set -x
          repo="serving"
          branch="sync-konflux-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update Konflux configurations" --body "Update Konflux components and pipelines" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - release-v1.18] Create OWNERS file update PR'
        run: |
          set -x
          repo="serving"
          branch="sync-owners-release-v1.18"
          target_branch="release-v1.18"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
      - env:
          GH_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
          GITHUB_TOKEN: ${{ secrets.SERVERLESS_QE_ROBOT }}
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref_name == 'main' }}
        name: '[serving - main] Create OWNERS file update PR'
        run: |
          set -x
          repo="serving"
          branch="sync-owners-main"
          target_branch="main"
          git remote add fork "https://github.com/serverless-qe/$repo.git" || true # ignore: already exists errors
          remote_exists=$(git ls-remote --heads fork "$branch")
          if [ -z "$remote_exists" ]; then
            # remote doesn't exist.
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f || exit 1
          fi
          git fetch fork "$branch"
          if git diff --quiet "fork/$branch" "$branch"; then
            echo "Branches are identical. No need to force push."
          else
            git push "https://serverless-qe:${GH_TOKEN}@github.com/serverless-qe/$repo.git" "$branch:$branch" -f
          fi
          gh pr create --base "$target_branch" --head "serverless-qe:$branch" --title "[$target_branch] Update OWNERS file" --body "Update OWNERS file" || true
        working-directory: ./src/github.com/openshift-knative/hack/openshift-knative/serving
